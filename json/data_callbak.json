[{"number":13,"title":"CSS3 新增calc(...)的兼容性","labels":[{"id":466036660,"name":"CSS3","color":"c2e0c6","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-11-06T18:43:55Z","updated_at":"2016-11-06T18:57:00Z","closed_at":null,"body":"上篇讲到 [CSS3 新增calc(...)的使用](http://hexson.win/#/article/12)，这里来讲一下 `calc()` 的兼容性。\r\n\r\n### PC\r\n\r\nFeature|Chrome|Firefox (Gecko)|Internet Explorer|Opera|Safari (WebKit)\r\n-|-|-|-|-|-\r\nBasic support|19 -webkit / 26|4.0(2) -moz / 16(16)|9|?|6 -webkit[1] / 7\r\nOn gradients' color stops|19 -webkit / 26|19(19)|9|?|6 -webkit[1] / 7\r\nnested calc()|51[2]|48(48)|?|?|?\r\nSupport for <number> values|?|48(48)|?|?|?\r\n\r\n### Mobile\r\n\r\nFeature|Android|Firefox Mobile (Gecko)|IE Mobile|Opera Mobile|Safari Mobile\r\n-|-|-|-|-|-\r\nBasic support|?|4.0(2) -moz / 16.0(16)|?|?|6 -webkit / 7\r\nOn gradients' color stops|?|19.0(19)|?|?|?\r\nnested calc()|51[2]|48(48)|?|?|?\r\nSupport for <number> values|?|48(48)|?|?|?\r\n\r\n[1] WebKit 6.0 的实现有些错误。\r\n[2] 有bug存在。"},{"number":12,"title":"CSS3 新增calc(...)的使用","labels":[{"id":466036660,"name":"CSS3","color":"c2e0c6","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-11-06T18:23:20Z","updated_at":"2016-11-06T18:23:43Z","closed_at":null,"body":"CSS3新增函数 `calc()` 可以用在任何一个需要计算长度、频次、角度、时间、数值、或整型的地方，有了 `calc()`，你就可以通过计算来决定一个CSS属性的值了。\r\n\r\n### 语法\r\n\r\n```css\r\n/* property: calc(expression) */\r\nwidth: calc(100% - 10px);\r\n```\r\n\r\n#### 值\r\n\r\nexpression 一个数学表达式，该表达式的结果会作为最终的值。\r\n\r\n#### 表达式\r\n\r\n该表达式可以使用以下运算符任意组合（使用正常的运算符优先级顺序）。\r\n\r\n`+` 加 `-` 减 `*` 乘 `/` 除\r\n\r\n表达式中的操作数可以使用任意语法种类的长度。如果你愿意，你可以在一个表达式中混用多种不同的长度单位。在需要时，你还可以使用小括号来调整计算顺序。\r\n\r\n> 注：乘数中至少要有一个及被除数必须是 <number> 类型的，用0作除数会让HTML解析器抛出异常。\r\n\r\n> 注：+和-运算符的两边必须始终要有空白符。比如calc(50% -8px)会被解析成为一个无效的表达式：一个百分比后跟一个负数长度值。而calc(8px + -50%)会被解析成为一个长度后跟一个加号再跟一个负百分比。*和/运算符不需要空白符，但考虑到统一性，仍然推荐加上空白符。\r\n\r\n> 实际使用时，需要添加浏览器的前缀 `-webkit-calc(...)` `-moz-calc(...)`\r\n\r\n### 示例\r\n\r\n```css\r\n.example {\r\n  /* 设置.example宽度为 容器宽度减去10px 后的值 */\r\n  width: calc(100% - 10px);\r\n  /* 设置.example宽度为 容器宽度的10%加上10em 后的值 */\r\n  width: calc(10% + 10em);\r\n  /* 设置.example宽度为 容器宽度的20%乘以5 后的值(值为100%) */\r\n  width: calc(20% * 5);\r\n  /* 设置.example宽度为 容器宽度除以5 后的值(值为20%) */\r\n  width: calc(100% / 5);\r\n  /* 设置.example宽度为 100减去(60减去10)px 后的值(值为50px) */\r\n  width: calc(100px - calc(60px - 10px));\r\n}\r\n```\r\n\r\n### 兼容性\r\n\r\n[CSS3 新增calc(...)的兼容性](http://hexson.win/#/article/13)"},{"number":11,"title":"HTTP headers 各大浏览器兼容性","labels":[{"id":474974873,"name":"headers","color":"5aad35","default":false},{"id":474318680,"name":"HTTP","color":"fbcfff","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-11-04T03:33:49Z","updated_at":"2016-11-04T03:40:13Z","closed_at":null,"body":"HTTP headers 各大浏览器的兼容性有略微不同，PC和Mobile上的浏览器又有些不同。\r\n\r\n### PC\r\n\r\nFeature | Chrome | Edge | Firefox | Internet Explorer | Opera | Safari | Servo\r\n---------|----------|-------|---------|--------------------|--------|-------|-------\r\nAccept|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nAccept-Charset|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nAccept-Encoding|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nAccept-Language|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nAccess-Control-Allow-Credentials|4|12|3.5|10|12|4|?\r\nAccess-Control-Allow-Headers|4|12|3.5|10|12|4|?\r\nAccess-Control-Allow-Methods|4|12|3.5|10|12|4|?\r\nAccess-Control-Allow-Origin|4|12|3.5|10|12|4|?\r\nAccess-Control-Expose-Headers|4|12|3.5|10|12|4|?\r\nAccess-Control-Max-Age|4|12|3.5|10|12|4|?\r\nAccess-Control-Request-Headers|4|12|3.5|10|12|4|?\r\nAccess-Control-Request-Method|4\t|12|3.5|10|12|4|?\r\nAge|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nCache-Control|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nConnection|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Encoding|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Disposition|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Language|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Length|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Location|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Type|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nCookie|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nCookie2|No support|No support|No support|No support|No support|No support|No support\r\nDate|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nDNT|23|(Yes)|4|9|(Yes)|6|(Yes)\r\nETag|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nExpires|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nFrom|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nHost|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nIf-Match|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nIf-Modified-Since|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nIf-None-Match|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nIf-Unmodified-Since|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nKeep-Alive|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nLast-Modified|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nLocation|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nOrigin|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nPragma|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nReferer|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nReferrer-Policy|No support|No support|50.0|No support|No support|No support|No support\r\nRetry-After|?|?|No support|?|?|?|?\r\nServer|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nSet-Cookie|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|?\r\nSet-Cookie2|No support|No support|No support|No support|No support|No support|No support\r\nStrict-Transport-Security|4.0|12|4|11|12|7|?\r\nTE|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nTrailer|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nTransfer-Encoding|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nUser-Agent|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nVary|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nVia|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nWarning|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nX-Content-Type-Options|1.0|(Yes)|51|8.0|13|No support|(Yes)\r\nX-Frame-Options|4.0|(Yes)|1.9.2|8.0|10.50|4.0|(Yes)\r\n\r\n### Mobile\r\n\r\nFeature|Android|Chrome for Android|Edge Mobile|Firefox for Android|IE Mobile|Opera Mobile|Safari Mobile\r\n--------|---------|----------------------|--------------|---------------------|-----------|--------------|--------\r\nAccept|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nAccept-Charset|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nAccept-Encoding|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nAccept-Language|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nAccess-Control-Allow-Credentials|2.1|(Yes)|(Yes)|1.0|(Yes)|12|3.2\r\nAccess-Control-Allow-Headers|2.1|(Yes)|(Yes)|1.0|(Yes)|12|3.2\r\nAccess-Control-Allow-Methods|2.1|(Yes)|(Yes)|1.0|(Yes)|12|3.2\r\nAccess-Control-Allow-Origin|2.1|(Yes)|(Yes)|1.0|(Yes)|12|3.2\r\nAccess-Control-Expose-Headers|2.1|(Yes)|(Yes)|1.0|(Yes)|12|3.2\r\nAccess-Control-Max-Age|2.1|(Yes)|(Yes)|1.0|(Yes)|12|3.2\r\nAccess-Control-Request-Headers|2.1|(Yes)|(Yes)|1.0|(Yes)|12|3.2\r\nAccess-Control-Request-Method|2.1|(Yes)|(Yes)|1.0|(Yes)|12|3.2\r\nAge|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nCache-Control|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nConnection|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Encoding|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Disposition|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Language|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Length|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Location|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nContent-Type|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nCookie|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nCookie2|No support|No support|No support|No support|No support|No support|No support\r\nDate|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nDNT|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nETag|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nExpires|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nFrom|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nHost|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nIf-Match|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nIf-Modified-Since|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nIf-None-Match|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nIf-Unmodified-Since|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nKeep-Alive|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nLast-Modified|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nLocation|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nOrigin|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nPragma|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nReferer|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nReferrer-Policy|No support|No support|No support|50.0|No support|No support|No support\r\nRetry-After|?|?|?|?|?|?|?\r\nServer|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nSet-Cookie|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nSet-Cookie2|No support|No support|No support|No support|No support|No support|No support\r\nStrict-Transport-Security|4.4|18|(Yes)|(Yes)|?|?|8.4\r\nTE|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nTrailer|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nTransfer-Encoding|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nUser-Agent|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nVary|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nVia|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nWarning|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\nX-Content-Type-Options|(Yes)|(Yes)|(Yes)|51|(Yes)|(Yes)|No support\r\nX-Frame-Options|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)|(Yes)\r\n\r\n如果有错误，欢迎在评论区指正。"},{"number":10,"title":"HTTP headers 使用范畴和归类","labels":[{"id":474974873,"name":"headers","color":"5aad35","default":false},{"id":474318680,"name":"HTTP","color":"fbcfff","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-11-04T02:34:24Z","updated_at":"2016-11-04T03:40:22Z","closed_at":null,"body":"HTTP headers 是允许客户端和服务器的请求或响应而传递的额外信息，一个请求头由不区分大小写的名字后面跟一个 `:` ，再然后是它的值组成（不能有换行符）。值之前的空格会被忽略。\r\n\r\n以下列表总结HTTP头的使用范畴：\r\n\r\n### Authentication\r\n\r\n- WWW-Authenticate\r\n- Authorization\r\n- Proxy-Authenticate\r\n- Proxy-Authorization\r\n\r\n### Caching\r\n\r\n- Age\r\n- Cache-Control\r\n- Expires\r\n- Pragma\r\n- Warning\r\n\r\n### Client hints\r\n\r\n- Accept-CH\r\n- Content-DPR\r\n- DPR\r\n- Downlink\r\n- Save-Data\r\n- Viewport-Width\r\n- Width\r\n\r\n### Conditionals\r\n\r\n- Last-Modified\r\n- ETag\r\n- If-Match\r\n- If-None-Match\r\n- If-Modified-Since\r\n- If-Unmodified-Since\r\n\r\n### Connection management\r\n\r\n- Connection\r\n- Keep-Alive\r\n\r\n### Content negotiation\r\n\r\n- Accept\r\n- Accept-Charset\r\n- Accept-Encoding\r\n- Accept-Language\r\n\r\n### Content security policy (CSP)\r\n\r\n- Content-Security-Policy\r\n- Content-Security-Policy-Report-Only\r\n\r\n### Controls\r\n\r\n- Expect\r\n- Max-Forwards\r\n\r\n### Cookies\r\n\r\n- Cookie\r\n- Set-Cookie\r\n- Cookie2\r\n- Set-Cookie2\r\n\r\n### CORS\r\n\r\n- Access-Control-Allow-Origin\r\n- Access-Control-Allow-Credentials\r\n- Access-Control-Allow-Headers\r\n- Access-Control-Allow-Methods\r\n- Access-Control-Expose-Headers\r\n- Access-Control-Max-Age\r\n- Access-Control-Request-Headers\r\n- Access-Control-Request-Method\r\n- Origin\r\n\r\n### Do Not Track\r\n\r\n- DNT\r\n- Tk\r\n\r\n### Downloads\r\n\r\n- Content-Disposition\r\n\r\n### HSTS\r\n\r\n- Strict-Transport-Security\r\n\r\n### Message body information\r\n\r\n- Content-Length\r\n- Content-Type\r\n- Content-Encoding\r\n- Content-Language\r\n- Content-Location\r\n\r\n### Message routing\r\n\r\n- Via\r\n\r\n### Redirects\r\n\r\n- Location\r\n\r\n### Request context\r\n\r\n- From\r\n- Host\r\n- Referer\r\n- Referrer-Policy\r\n- User-Agent\r\n\r\n### Response context\r\n\r\n- Allow\r\n- Server\r\n\r\n### Range requests\r\n\r\n- Accept-Ranges\r\n- Range\r\n- If-Range\r\n- Content-Range\r\n\r\n### Server-sent events\r\n\r\n- Ping-From\r\n- Ping-To\r\n- Last-Event-ID\r\n\r\n### Transfer coding\r\n\r\n- Transfer-Encoding\r\n- TE\r\n- Trailer\r\n\r\n### WebSockets\r\n\r\n- Sec-WebSocket-Key\r\n- Sec-WebSocket-Extensions\r\n- Sec-WebSocket-Accept\r\n- Sec-WebSocket-Protocol\r\n- Sec-WebSocket-Version\r\n\r\n### Other\r\n\r\n- Date\r\n- Link\r\n- Retry-After\r\n- Upgrade\r\n- Vary\r\n- X-Content-Duration\r\n- X-Content-Type-Options\r\n- X-DNS-Prefetch-Control\r\n- X-Frame-Options\r\n- X-Requested-With\r\n- X-UA-Compatible"},{"number":9,"title":"Add a custom HTTP headers","labels":[{"id":474974873,"name":"headers","color":"5aad35","default":false},{"id":474318680,"name":"HTTP","color":"fbcfff","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-11-03T08:52:36Z","updated_at":"2016-11-04T03:40:30Z","closed_at":null,"body":"如果有一个需求：在进行 WEB HTTP 请求时，要求添加一个 **自定义** 的 `HTTP headers`，用于身份识别之类，先不管用来干什么，我们如何正确的添加一个 **自定义** 的 `HTTP headers` 呢？踩过坑之后依然不知道路要怎么走，你可以看一看下面的内容对你有没有帮助。\r\n\r\n首先你要添加的 `HTTP headers` 可能是这样的：\r\n\r\n```javascript\r\nheaders: {\r\n  \"Custom-Key\": \"string-custom-value\"\r\n}\r\n```\r\n\r\n我们测试一下结果：\r\n\r\n![add headers error](http://ww3.sinaimg.cn/large/005EkSOcgw1f9eztqb6z8j30fj052aap.jpg)\r\n\r\nRequest header field **Custom-Key** is not allowed by **Access-Control-Allow-Headers** in preflight response.\r\n\r\n请求头字段 **Custom-Key** 没有通过 **Access-Control-Allow-Headers** 的允许！\r\n\r\n那么这个 **Access-Control-Allow-Headers** 东西是啥，翻译一下：HTTP访问控制允许的头。原来，我们自定义的 `HTTP headers` 没有被允许，所以我们需要改一下后台 **Access-Control-Allow-Headers** 设置。\r\n\r\n以 `php` 后台为例，自定义请求头 `Token-Key`：\r\n\r\n设置之前代码片段为\r\n\r\n```php\r\nheader(\"\r\n  Access-Control-Allow-Headers:\r\n  Origin,\r\n  No-Cache,\r\n  X-Requested-With,\r\n  If-Modified-Since,\r\n  Pragma, Last-Modified,\r\n  Cache-Control,\r\n  Expires,\r\n  Content-Type,\r\n  X-E4M-With\r\n\")\r\n```\r\n\r\n设置之后代码片段为\r\n\r\n```php\r\nheader(\"\r\n  Access-Control-Allow-Headers:\r\n  Origin,\r\n  No-Cache,\r\n  X-Requested-With,\r\n  If-Modified-Since,\r\n  Pragma, Last-Modified,\r\n  Cache-Control,\r\n  Expires,\r\n  Content-Type,\r\n  X-E4M-With,\r\n  Token-Key\r\n\")\r\n```\r\n\r\n要添加的自定义头代码片段为\r\n\r\n```javascript\r\nheaders: {\r\n  \"Token-Key\": \"05f651ca89d801d61ea17ea0e72583e8\"\r\n}\r\n```\r\n\r\n这里测试接口直接把 `HTTP headers` 的结果以 `json` 形式返回，那么 `console` 一下\r\n\r\n![HTTP headers Json](http://ww2.sinaimg.cn/large/005EkSOcgw1f9ezty880nj30fj098mz3.jpg)\r\n\r\n如上图，成功接收。\r\n\r\n收工。"},{"number":8,"title":"HTML mailto 语法暗藏玄机","labels":[{"id":473456093,"name":"HTML","color":"d4c5f9","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-11-02T03:15:54Z","updated_at":"2016-11-02T03:26:07Z","closed_at":null,"body":"最近有用到 HTML mailto 语法，我们有时会在网页上放上自己的电子邮箱地址，当用户点击有 `mailto` 的超链接时，就能自动打开电脑上默认的客户端软件，如microsoft outlook或foxmail之类，但mailto的使用仅仅如此吗？其实暗藏玄机。\r\n\r\n## mailto基本语法实例\r\n\r\n```html\r\n<a href=\"mailto:1477546184@qq.com\">发送邮件</a>\r\n```\r\n\r\n## 暗藏玄机\r\n\r\n#### 收件人+抄送人\r\n\r\n```html\r\n<a href=\"mailto:1477546184@qq.com?hesers@163.com\">发送邮件</a>\r\n```\r\n\r\n> 问号前面为收件人，后面为抄送人\r\n\r\n#### 多个收件人\r\n\r\n```html\r\n<a href=\"mailto:1477546184@qq.com;hesers@163.com\">发送邮件</a>\r\n```\r\n\r\n> 多个收件人用分号隔开\r\n\r\n#### 彩蛋，填写一个抄送对象、一个暗送对象、邮件标题、邮件内容\r\n\r\n```html\r\n<a href=\"mailto:1477546184@qq.com?\r\n  cc=hesers@163.com&\r\n  bcc=hesers@163.com&\r\n  subject=HTML mailto&\r\n  body=mailto 语法详解\">\r\n  发送邮件\r\n</a>\r\n```\r\n\r\n> ? **cc** = 抄送对象 & **bcc** = 暗送对象 & **subject** = 邮件标题 & **body** = 邮件内容\r\n\r\n> 根据需要添加对应的键值即可，如果想在邮件内容中进行换行，只需要在行与行之间加入 `%0d%0a`"},{"number":7,"title":"Git commit 撤销方法一览","labels":[{"id":463294330,"name":"Git","color":"c5def5","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-11-01T11:19:46Z","updated_at":"2016-11-01T11:19:46Z","closed_at":null,"body":"在使用 **Git** 的过程中，如果不小心提交一个不需要commit的文件或是其他的原因导致你想撤销 `git commit` 的动作，这个时候我们就需要一些方法来撤销之前的commit。\r\n\r\n先使用 `git log` 命令查看 `commit` 日志：\r\n\r\n![git log](http://ww4.sinaimg.cn/large/005EkSOcgw1f9ctgxxnzuj30g605cmxs.jpg)\r\n\r\n找到需要回退版本的commit的哈希值，下面开始回退。\r\n\r\n`git reset --mixed commit_id`\r\n\r\n> 默认方式，不带任何参数的git reset，回退到某个版本，只保留源码，回退commit和index信息\r\n\r\n`git reset --soft commit_id`\r\n\r\n> 回退到某个版本，只回退了commit的信息，不会恢复到index file一级。如果还要提交，直接commit即可\r\n\r\n`git reset --hard commit_id`\r\n\r\n> 彻底回退到某个版本，本地的源码也会变为上一个版本的内容\r\n\r\n以上。"},{"number":6,"title":"Hoslider.js: 简洁的 mobile touch slider 组件类库","labels":[{"id":468209839,"name":"hoslider","color":"f2546b","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-10-25T02:17:31Z","updated_at":"2016-10-26T02:18:16Z","closed_at":null,"body":"公司mobile端的一个需求开发而来，后面继续由我开发并维护，遵循 **MIT** 开源协议\n# Hoslider\n\n一个简单易用的 **mobile** 端 touch slider 组件类库，目前正在持续更新中...\n## example\n\n首先引入\n\n`<link rel=\"stylesheet\" type=\"text/css\" href=\"/build/hoslider.css\">`\n\n`<script type=\"text/javascript\" src=\"/build/hoslider.min.js\"></script>`\n\n栗子很简单\n\n``` javascript\nvar demo = new Hoslider('demo', {\n    partition: 15\n});\n```\n\n现在你就可以在手机浏览器或者 **chrome** 浏览器里面模拟mobile查看效果\n\n上一张动图展示下组件是如何运行的：\n\n![Hoslider demo](http://ww3.sinaimg.cn/mw690/005EkSOcgw1f94a9m2w5ug30b90dwjya.gif)\n## 参数\n\n**partition**\n\n组件间隔(单位:px)\n\n`partition: 10`\n\n**duration**\n\n动画执行时间(单位:ms)\n\n`duration: 300`\n\n**touchEndCallback**\n\ntouch 事件结束回调函数\n\n``` javascript\ntouchEndCallback: function () {\n    // some code...\n}\n```\n\n**endCallback**\n\ntouch 事件最后结束回调函数\n\n``` javascript\nendCallback: function () {\n    // some code...\n}\n```\n"},{"number":5,"title":"CSS 字体大小之REM","labels":[{"id":466036660,"name":"CSS3","color":"c2e0c6","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-10-21T09:27:15Z","updated_at":"2016-10-21T14:43:28Z","closed_at":null,"body":"网页技术发展至今，随着设备平台的迅速发展，相关技术迭代的非常迅猛，`CSS3` 的出现，网页字体的大小从之前的 `px` 、 `pt` 、 `em` 、`percent` 等增加了一个新的单位: `rem`。\n\n**W3C** 上有这么一句话描述它：font size of the root element\n\n从这句话上面看，字体大小是参照根元素 `<html>` 大小为基准的，我们只要在根元素 `<html>` 设定一个参考值，然后再根据需要，具体的去设置对应的字体大小，我们来看一个实例代码：\n\n``` css\nhtml {\n  font-size: 62.5%;  /* 10px */\n}\np,span {\n  font-size: 1.4rem; /* 14px */\n}\n.class {\n  font-size: 1.8rem; /* 18px */\n}\n```\n\n让我们来解析一下这段代码的意思，首页给根元素 `<html>` 设置了字体的大小10px，这个数值是怎么来的呢？浏览器默认字体大小 `16px * ? = 10px`，我们可以得出具体的百分比，然后给元素 `<p>` 和 `<span>` 设置的字体大小为 `1.4 * 10px = 14px`，再给某个或某些 **className** 包含 `.class` 的元素设置了字体大小为 `1.8 * 10px = 18px`，到此为止，你知道该怎么去使用 `rem` 了吧。\n\n> 补充：**em** 虽然一般以元素 `<body>` 为参考点，但是某些时候你如果不知道父元素字体大小，那么很可能子元素的字体大小是未知的。附上 **em** 的计算公式：\n> \n> 子元素的em值 = 子元素的font-size / 父元素的font-size \\* 父元素的em值\n"},{"number":4,"title":"身未动，心已远。","labels":[{"id":440059333,"name":"杂文","color":"f9d0c4","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-10-20T09:52:27Z","updated_at":"2016-10-20T15:37:33Z","closed_at":null,"body":"<p class=\"ac\">2016年 秋</p><p class=\"ac\">最近老是有各种想法萦绕在心头，去海边看日出，呵呵呵。</p>\n\n\n<p class=\"ac\">读很多书，见很多人，看很多景，爱一个人，任重而道远，先去看看景。</p>\n\n\n<div class=\"pb15\"></div>\n\n\n![青春18](http://ww2.sinaimg.cn/mw690/005EkSOcgw1f8ywmfzm5zj30bl0gcdkb.jpg)\n"},{"number":3,"title":"Git Push 储存用户名和密码","labels":[{"id":463294330,"name":"Git","color":"c5def5","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-10-17T16:32:33Z","updated_at":"2016-10-19T07:16:01Z","closed_at":null,"body":"在使用 `Git Push` 的过程中，次数频繁需要输入用户名和密码，太久不push需要输入用户名和密码，低版本的 **Git** 甚至每次都需要提交用户名和密码，天了噜，这是坑，必须要填过去了咯。\n### for windows\n\n首先我们进入 `%HOME%` 目录，你不用管这是什么东东，一般在电脑 `C:\\users\\Administrator` 的目录，**users** 可能对应中文名 **用户**，某些电脑 **Administrator** 可能为 **Admin**，总之你看见一个 `.gitconfig` 名字的文件的时候，恭喜你找对目录了，这个时候我们来借助 `git bash` （鼠标右键阿喂）创建一个名为 `.git-credentials` 的文件，直接创建？对不起，大win不支持直接创建以 `.` 开头的文件。\n\n好了，打开面板之后，我们开始输入命令：\n- `touch .git-credentials`\n- `vim .git-credentials`\n- `https://{username}:{password}@github.com`\n- `wq`\n- `git config --global credential.helper store`\n\n> 注意：上面第三步在花括号内把你对应的账号密码替换上去，然后按 `ESC` 键，输入第四步命令保存并退出编辑文件的状态。\n\n全部完成之后，你就已经填坑了。\n"},{"number":2,"title":"虞美人盛开的山坡 コクリコ坂から","labels":[{"id":450332787,"name":"电影","color":"fef2c0","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-10-17T03:49:31Z","updated_at":"2016-10-20T03:55:53Z","closed_at":null,"body":"![コクリコ坂から 海报](http://ww1.sinaimg.cn/mw690/005EkSOcgw1f8ylglodbij30go096mzn.jpg)\n\n两个人一起翘课啊，真是青春啊\n\n尽管命运跟我们开了玩笑，尽管现实无法改变，我拥抱这命运，接受这现实，并仍旧喜欢着你\n\n多年后，再回想这样的迷茫或许连执著的原因都记不得了，青春就是让你张扬的笑，也给你莫名的痛\n\n只顾着追求新事物，却不回顾历史，怎么会有未来\n\n我说不出来为什么爱你，但我知道，你就是我不爱别人的理由\n\n宫崎吾朗执导\n\n虽然宫崎吾朗的地海普遍都说很烂，但是这部剧在我而言还是值得一看\n\n友情，亲情，爱情，青春，这些你都能看得到\n\n一个小姑娘认真又平凡的生活着\n\n配乐很不错\n\n插入曲  1963年的怀旧金曲 - 上を向いて歩こう\n\n官方主题曲  手嶌MM的 - さよならの夏 〜コクリコ坂から〜\n"},{"number":1,"title":"Blog の 始","labels":[{"id":440059333,"name":"杂文","color":"f9d0c4","default":false}],"state":"open","locked":false,"comments":0,"created_at":"2016-09-27T11:02:06Z","updated_at":"2016-10-25T03:33:23Z","closed_at":null,"body":"前段时间一直在忙，很多事情在日程上没时间去做，构建一个自己blog也是其中之一，之前有写些随笔的习惯，不过大部分流落各处，现在想重拾起来，不管是随笔、总结又或是技术各种，留下点回忆和记录。\n### 构想\n\n构想总是大胆又天马行空的，想过很多种方式去做，有想过基于nodeJs为后台，AngularJs为前台，然后自己写了各种的模块，Validator、Api...，最后的最后，发现比较费时间，还有备案等问题，后来看到很多用 **hexo** 搭建的blog，去官网看了一下有一些主题可供选择，但是到后面没想过用这个去搭建一个blog，很多原因说不上来，看了好几个这类的blog，傻傻分不清。\n### 构建\n\n一个偶然的情况下在知乎上面看到了关于blog的问题，有一个回答里面讲了一些 **React** 的东西，当时看下去觉得很有趣，很好玩，这让我有点兴奋了，后来脑子里有了个大概的想法：通过 **React Router** 和 **git** ，实现单页blog，而且这样我随便来个电脑都能进行coding和commits，很好阿哈。\n### 技术栈\n\n前端框架想过很多，上面也提到了AngularJs，目前公司是用这个贯穿整个前端的架构，有一些历史和文化的原因，最后觉得blog很多模块用不上，就抛弃了他 >_<\n\n开发使用了\n- **react@15.3.2**\n- **react-router@2.8.1**\n- **less@2.7.1**\n- **jquery@1.11.1**\n- **grunt@1.0.1**\n- **es6**\n- **etc...**\n### 最后\n\n平常很少上知乎，这次由知乎得益一些启发。\n当然并不是推崇什么，不过我觉得对人和事物保持着敬畏的心态，才有所得。\n于是乎，就有了这个blog。\n"}]